[buildout]
extends = base.cfg

download-cache = downloads
eggs-directory = eggs

parts = 
    plone
    zope2
    productdistros
    instance
    instance1
    instance2
    jing
    zopepy
    test

[shared]
# Used below
zeo-host = backend1.cnx.org:7700
# Used by the ClockServer config. See below
portal-name = plone 
zope-user = www-data
clock-server-conf = 
    %import Products.ClockServer
    <clock-server>
        method /${shared:portal-name}/queue_tool/clockTick
        period 3
        user
        password
    </clock-server>

pdf-conf =
    <zodb_db pdfs>
        # pdfs database
        cache-size 5000
        # ZEOStorage database
        <zeoclient>
             server ${shared:zeo-host}
             storage pdf
             name pdf
             var ${buildout:directory}/var
             cache-size 30MB
        </zeoclient>
        mount-point /${shared:portal-name}/pdfs
     </zodb_db>

check-interval = python-check-interval 1300


[instance]
# Implicitly gets the ClockServer config
debug-mode = off
verbose-security = off
zeo-address = ${shared:zeo-host}
zodb-cache-size = 500000
zserver-threads = 2
effective-user = ${shared:zope-user}
icp-address = 3130
zodb-temporary-storage =
  <zodb_db temporary>
    # Temporary storage database (for sessions)
  <zeoclient>
    server ${shared:zeo-host}
    storage temp
    name zeostorage
  </zeoclient>
    mount-point /temp_folder
    container-class Products.TemporaryFolder.TemporaryContainer
  </zodb_db>

zope-conf-additional = ${shared:pdf-conf}
     ${shared:check-interval}

[instance1]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/plone.recipe.zope2instance
recipe = plone.recipe.zope2instance
zope2-location = ${zope2:location}
user = ${shared:user} 
port-base=100
http-address = 8080
environment-vars = ${shared:environment-vars}
zeo-client = on
zeo-address = ${shared:zeo-host}
eggs = ${shared:eggs}
products = ${shared:products}
debug-mode = off
verbose-security = off
zeo-address = ${shared:zeo-host}
zodb-cache-size = 500000
zserver-threads = 2
effective-user = ${shared:zope-user}
icp-address = 3130
zodb-temporary-storage =
  <zodb_db temporary>
    # Temporary storage database (for sessions)
  <zeoclient>
    server ${shared:zeo-host}
    storage temp
    name zeostorage
  </zeoclient>
    mount-point /temp_folder
    container-class Products.TemporaryFolder.TemporaryContainer
  </zodb_db>
zope-conf-additional = ${shared:pdf-conf}
     ${shared:check-interval}


[instance2]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/plone.recipe.zope2instance
recipe = plone.recipe.zope2instance
zope2-location = ${zope2:location}
user = ${shared:user} 
port-base=200
http-address = 8080
environment-vars = ${shared:environment-vars}
zeo-client = on
zeo-address = ${shared:zeo-host}
eggs = ${shared:eggs}
products = ${shared:products}
debug-mode = off
verbose-security = off
zeo-address = ${shared:zeo-host}
zodb-cache-size = 500000
zserver-threads = 2
effective-user = ${shared:zope-user}
icp-address = 3130
zodb-temporary-storage =
  <zodb_db temporary>
    # Temporary storage database (for sessions)
  <zeoclient>
    server ${shared:zeo-host}
    storage temp
    name zeostorage
  </zeoclient>
    mount-point /temp_folder
    container-class Products.TemporaryFolder.TemporaryContainer
  </zodb_db>

zope-conf-additional = ${shared:pdf-conf}
     ${shared:check-interval}

[create-test-users]
recipe = iw.recipe.cmd
on_install = true
on_update = false
cmds =
# create regular users. parematers are portal name, user name, password, first name, surname, and email addy.
# Each argument
    ${buildout:directory}/bin/instance run ${shared:scripts-dir}/addRhaptosUser.zctl ${shared:portal-name} user1 user1 firstname1 lastname1 useremail1@localhost.net
    ${buildout:directory}/bin/instance run ${shared:scripts-dir}/addRhaptosUser.zctl ${shared:portal-name} user2 user2 firstname2 lastname2 useremail2@localhost.net
    ${buildout:directory}/bin/instance run ${shared:scripts-dir}/addRhaptosUser.zctl ${shared:portal-name} user3 user3 firstname3 lastname3 useremail3@localhost.net
    ${buildout:directory}/bin/instance run ${shared:scripts-dir}/addRhaptosOrgAccount.zctl ${shared:portal-name} siyavula siyavula siya-firstname siya-lastname siya-email@localhost.net
# create organizational account user. parameters are user name, password, full name, short name, and email addy.
    ${buildout:directory}/bin/instance run ${shared:scripts-dir}/addRhaptosOrgAccount.zctl ${shared:portal-name} org1 org1 'org1 name' org1-name orgemail1@localhost.net
    ${buildout:directory}/bin/instance run ${shared:scripts-dir}/addRhaptosOrgAccount.zctl ${shared:portal-name} org2 org2 'org2 name' org2-name orgemail2@localhost.net
# create manager user. parematers are portal name, user name, password, first name, surname, and email addy.
    ${buildout:directory}/bin/instance run ${shared:scripts-dir}/addRhaptosManager.zctl ${shared:portal-name} manager1 manager1 managerfirstname1 managerlastname1 manageremail1@localhost.net
