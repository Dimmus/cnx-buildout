[buildout]
parts +=
    pcre
    haproxy-build
    haproxy-conf
    munin-client1
    munin-client2
    munin-node-config
    supervisor

squid-proxy-port = 8000

[pcre]
# pcre is the perl regular expression module which is used by both nginx and haproxy
recipe = hexagonit.recipe.download
ignore-existing = true
url = ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.00.tar.gz
strip-top-level-dir = true

[haproxy-build]
# To install on MacOSX: sudo port install haproxy
recipe = plone.recipe.haproxy
url = http://haproxy.1wt.eu/download/1.3/src/haproxy-1.3.17.tar.gz
target=generic
pcre=1
extra_options=PCREDIR=${pcre:location}

[haproxy-conf]
recipe          = collective.recipe.template
input           = ${buildout:directory}/etc/templates/haproxy.conf.in
output          = ${buildout:directory}/etc/haproxy.conf
pidfile         = ${buildout:directory}/parts/haproxy-instance/haproxy.pid
maxconn         = 20000 
ulimit-n        = 40011
# user            = nateaune
# group           = nateaune

[munin-client1]
# http://pypi.python.org/pypi/munin.zope
recipe = zc.recipe.egg
eggs = munin.zope
scripts = munin=munin1
arguments = http_address='${instance1:http-address}', user='zope'

[munin-client2]
# http://pypi.python.org/pypi/munin.zope
recipe = zc.recipe.egg
eggs = munin.zope
scripts = munin=munin2
arguments = http_address='${instance2:http-address}', user='zope'

[munin-node-config]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/templates/munin-node.conf.in
output = ${buildout:directory}/etc/munin-node.conf

[supervisor]
# http://pypi.python.org/pypi/collective.recipe.supervisor
recipe      = collective.recipe.supervisor
port        = 9001
user        = admin
password    = admin
logfile     = ${buildout:directory}/var/log/supervisord.log
plugins     = superlance

programs =
    10 haproxy ${buildout:directory}/bin/haproxy [-f ${buildout:directory}/etc/haproxy.conf -db] ${buildout:directory} true
