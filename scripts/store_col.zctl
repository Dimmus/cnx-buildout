from Testing.ZopeTestCase.utils import makerequest
from AccessControl.SecurityManagement import newSecurityManager
from Products.CMFCore.tests.base.security import AnonymousUser, OmnipotentUser
from psycopg import Binary

user = OmnipotentUser().__of__(app)
newSecurityManager(None, user)

app = makerequest(app)
app.REQUEST.set('PARENTS',[app])
app.REQUEST.traverse('/VirtualHostBase/http/cnx.org/plone/VirtualHostRoot/')


for col in app.plone.content.objectValues('Version Folder'):
    for rev in col.objectValues('Collection'):
        mod = app.plone.portal_moduledb.sqlGetModule(id=rev.objectId,version=rev.version)
        if len(mod) == 0:
            print "New %s/%s:" % (rev.objectId,rev.version) ,
            try:
                app.plone.portal_moduledb.insertModuleVersion(rev)
                print "Metadata succeeded"
            except:
                print "failed"
                continue

        modfile = app.plone.portal_moduledb.sqlGetModuleFile(id=rev.objectId,version=rev.version, filename='collection.xml')
        if len(modfile) == 0:
            print "New collxml %s/%s:" % (rev.objectId,rev.version) ,
            try:
                xml = rev.restrictedTraverse('source_create')()
                res = app.plone.portal_moduledb.sqlInsertFile(file = Binary(xml))
                fid = res[0].fileid
                app.plone.portal_moduledb.sqlInsertModuleFile(moduleid=rev.objectId, version=rev.version, fileid=fid, filename='collection.xml',mimetype='text/xml')
                print "XML succeeded"
            except:
                print "failed"
                raise

import transaction; transaction.commit()
